{"docs":[{"title":"1.1-基础设施命名规范","url":"/1.1-基础设施命名规范.html","content":"# 1.1 基础设施命名规范 ## 一、适用范围与目标 - 适用于所有主机、网络、存储、账号、服务、云资源等基础设施对象。 - 目标：统一命名，提升可读性、可追溯性、自动化兼容性，减少歧义和管理混乱。 ## 二、命名原则 1. 统一、简洁、可读、可追溯 2. 避免歧义和重复，禁止特殊字符和空格 3. 体现业务、环境、用途、序号等关键信息 4. 命名长度适中，便于自动化脚本处理 ## 三、命名规则 - 主机命名：`--` 例：web-prod-01 - 网络命名：`--` 例：cn-vpc-db-01 - 存储命名：`--` 例：backup-nas-01 - 账号命名：`-` 例：ops-zhangsan - 服务命名：`--` 例：payment-api-prod - 云资源命名：`---` 例：order-ecs-prod-01 ## 四、操作流程 1. 新建资源前，查阅命名规范，确定命名方案 2. 资源命名需经团队负责人审核 3. 命名后录入 CMDB/资产系统，确保唯一性 4. 变更命名需审批并同步更新所有相关系统 ## 五、实际案例 - 新增一台生产环境 Web 服务器，命名为：web-prod-03 - 新建北京区域数据库子网，命名为：bj-vpc-db-02 - 新增运维人员李四账号，命名为：ops-lisi ## 六、命名模板 ```text -- -- -- - -- --- ``` ## 七、注意事项 - 禁止使用特殊字符（如 !@#$%^&*）、空格、中文 - 禁止与历史命名冲突，避免无意义缩写 - 命名变更需全链路同步，防止遗留风险 ## 八、参考资料 - 《阿里云资源命名最佳实践》 - 《Google SRE 命名规范》 - 团队内部 CMDB 命名标准"},{"title":"1.2-主机与资产管理规范","url":"/1.2-主机与资产管理规范.html","content":"# 1.2 主机与资产管理规范 ## 一、适用范围与目标 - 适用于所有物理主机、虚拟机、云主机、网络设备、存储、K8s节点等IT资产。 - 目标：实现资产全生命周期管理，提升资产可见性、合规性和安全性。 ## 二、资产管理流程 1. 资产登记：新购/新增资产需及时登记入库 2. 资产变更：扩容、迁移、用途变更等需审批并记录 3. 资产回收：下线、报废、回收需归档并清理数据 4. 资产盘点：定期核查资产与CMDB一致性 ## 三、详细规范 - 资产信息要求：主机名、IP、用途、负责人、采购信息、生命周期状态等 - CMDB录入：所有资产必须录入CMDB，保持信息实时更新 - 标签与分组：统一标签体系（如环境、业务线、责任人） - 变更审批：资产变更需走审批流程，变更记录可追溯 - 回收与销毁：数据彻底清理，介质安全销毁，回收流程留痕 ## 四、操作流程 1. 资产采购/新增 → 资产登记 → CMDB录入 → 负责人确认 2. 资产变更申请 → 审批 → 变更执行 → CMDB同步更新 3. 资产下线/报废 → 审批 → 数据清理 → 归档 → CMDB更新 4. 定期盘点 → 发现异常及时修正 ## 五、实际案例 - 新购5台云主机，登记后录入CMDB，分配给研发环境 - 某主机迁移用途，由“测试”变更为“生产”，审批后同步更新CMDB - 服务器下线，数据清理后归档，资产状态变更为“已回收” ## 六、资产登记模板 ```text # 资产登记表 - 资产编号： - 资产类型： - 主机名： - IP地址： - 用途： - 负责人： - 采购日期： - 生命周期状态： - 备注： ``` ## 七、注意事项 - 资产信息需及时、准确、完整，避免“僵尸资产” - 变更、回收流程需留痕，便于审计 - 资产盘点建议每季度至少一次 ## 八、参考资料 - 《企业IT资产管理最佳实践》 - 《阿里云CMDB资产管理规范》 - 团队内部资产管理制度"},{"title":"1.3-账号与权限管理规范","url":"/1.3-账号与权限管理规范.html","content":"# 1.3 账号与权限管理规范 ## 一、适用范围与目标 - 适用于所有IT系统、云平台、自动化工具、数据库等涉及账号与权限的场景。 - 目标：实现账号全生命周期管理，权限最小化，提升安全性与合规性。 ## 二、管理原则 1. 账号唯一、实名、可追溯 2. 权限分级、最小授权、定期复查 3. 严禁共用账号，敏感操作需多因子认证 4. 账号与权限变更需审批、留痕 ## 三、详细规范 - 账号申请：需工单/流程，实名登记，指定用途与责任人 - 权限分级：RBAC模型，按业务、环境、操作类型分级授权 - 密码与密钥：强密码策略，定期更换，密钥集中管理，禁止明文存储 - 2FA与认证：关键系统强制开启二次认证，异常登录告警 - 账号回收：离职、岗位变动、长期不活跃账号需及时回收 - 审计与日志：所有账号操作全量审计，日志保留≥180天 ## 四、操作流程 1. 账号申请 → 审批 → 创建 → 权限分配 → 通知责任人 2. 权限变更申请 → 审批 → 权限调整 → 审计记录 3. 账号回收申请/自动检测 → 审批 → 回收/禁用 → 审计记录 4. 定期权限复查 → 发现异常及时整改 ## 五、实际案例 - 新员工入职，申请云平台账号，审批后分配只读权限，离职时账号回收 - 生产数据库操作需临时授权，操作后权限自动回收 - 检查发现某账号6个月未登录，自动禁用并通知责任人 ## 六、账号申请模板 ```markdown # 账号申请单 - 申请人： - 申请系统： - 用途说明： - 责任人： - 申请权限： - 申请日期： - 审批人： - 备注： ``` ## 七、注意事项 - 禁止共用账号，禁止弱密码，禁止明文存储密钥 - 账号与权限变更需全链路同步，防止遗留风险 - 定期复查权限，及时回收无用账号 ## 八、参考资料 - 《阿里云账号与权限最佳实践》 - 《NIST 身份与访问管理指南》 - 团队内部账号管理制度"},{"title":"1.4-文档与知识管理规范","url":"/1.4-文档与知识管理规范.html","content":"# 1.4 文档与知识管理规范 ## 一、适用范围与目标 - 适用于所有运维相关文档、SOP、知识库、案例归档等内容的管理。 - 目标：提升知识传承、团队协作和运维效率，减少知识孤岛和重复劳动。 ## 二、管理目标 1. 文档结构清晰、内容准确、持续更新 2. 知识库分类归档、便于检索、易于共享 3. SOP标准化、模板统一、流程可追溯 4. 案例归档与复盘，促进经验沉淀 ## 三、详细规范 - 文档编写：结构清晰，内容准确，及时更新，统一模板与命名规范 - 分类归档：按类型（SOP、案例、规范、FAQ等）和业务线归档 - 知识库建设：支持全文检索、标签、版本管理，定期评审优化 - SOP管理：每个SOP包含目的、步骤、注意事项、回退方案，定期复查 - 案例归档：故障、变更、应急等案例归档，复盘总结，经验共享 ## 四、操作流程 1. 新文档/SOP编写 → 审核 → 分类归档 → 发布 2. 案例归档 → 复盘总结 → 归档入库 → 分享团队 3. 定期文档/SOP复查 → 发现过期及时归档或更新 ## 五、实际案例 - 生产环境MySQL主从切换SOP，按模板编写，发布到知识库 - 某次线上故障复盘报告归档，团队分享经验教训 - FAQ文档定期补充，减少重复答疑 ## 六、SOP模板 ```text # 标准操作流程（SOP）模板 ## 目的 简要说明该 SOP 的目标和适用范围。 ## 操作步骤 1. 步骤一 2. 步骤二 3. 步骤三 ## 注意事项 - 注意点1 - 注意点2 ## 回退方案 如遇异常，如何回退或恢复。 ``` ## 七、注意事项 - 文档需定期复查，过期及时归档或更新 - SOP变更需同步通知相关团队成员 - 知识库权限分级，敏感文档需控制访问 ## 八、参考资料 - 《Google SRE 文档管理最佳实践》 - 《阿里云运维知识库建设指南》 - 团队内部知识管理制度"},{"title":"2.1-变更与发布管理规范-案例集锦","url":"/2.1-变更与发布管理规范-案例集锦.html","content":"# 变更与发布管理规范-案例集锦 ## 案例1：生产环境Nginx配置变更 - 申请人：张三 - 步骤：提前一周提交变更单，审批后凌晨发布，执行后验证业务无异常，复盘归档 - 亮点：严格遵循流程，变更无故障，记录完整 ## 案例2：紧急修复Redis配置 - 申请人：李四 - 步骤：主管审批后执行，事后补充变更单与复盘，操作全程审计 - 亮点：紧急变更补审，流程闭环，风险可控 ## 案例3：自动化CI/CD流水线发布 - 申请人：王五 - 步骤：自动化流水线发布，变更记录自动归档，异常自动回滚，发布后自动通知团队 - 亮点：自动化、可追溯、回滚机制完善"},{"title":"2.1-变更与发布管理规范","url":"/2.1-变更与发布管理规范.html","content":"# 2.1 变更与发布管理规范 ## 一、适用范围与目标 - 适用于所有生产、测试、开发环境的系统、服务、配置、网络等变更与发布操作。 - 目标：规范变更流程，降低风险，提升系统稳定性和可追溯性。 ## 二、管理目标 1. 变更全流程可控、可追溯、可回退 2. 变更审批、执行、验证、复盘全链路闭环 3. 发布窗口、灰度发布、回滚机制标准化 ## 三、详细规范 - 变更类型：常规变更、紧急变更、自动化变更，需分类管理 - 变更申请：需提交变更单，说明内容、影响、回退方案、责任人 - 审批流程：重大变更需多级审批，紧急变更事后补审 - 发布窗口：生产变更需在指定窗口执行，避免高峰期 - 执行与验证：变更执行需双人核查，执行后验证业务健康 - 回滚机制：所有变更需有回滚方案，支持一键回退 - 变更记录：全程记录，便于审计与复盘 ## 四、操作流程 1. 变更申请 → 审批 → 排期 → 执行 → 验证 → 记录 → 复盘 2. 紧急变更：申请 → 主管审批 → 执行 → 事后补审与复盘 3. 自动化变更：脚本/流水线变更需自动记录与通知 ## 五、实际案例 - 生产环境Nginx配置变更，提前一周申请，审批后在凌晨发布，执行后验证业务无异常 - 紧急修复Redis配置，主管审批后执行，事后补充变更单与复盘 - 自动化CI/CD流水线发布，变更记录自动归档，异常自动回滚 ## 六、变更单模板 ```markdown # 变更单 - 变更编号： - 申请人： - 变更内容： - 影响评估： - 执行时间窗口： - 回退方案： - 审批人： - 变更结果： - 复盘总结： ``` ## 七、注意事项 - 变更需提前申请，严禁未审批直接操作 - 变更执行需双人核查，关键步骤留痕 - 回滚方案需可行，变更后及时验证业务健康 ## 八、参考资料 - 《ITIL 变更管理最佳实践》 - 《阿里云变更与发布管理规范》 - 团队内部变更管理制度"},{"title":"2.2-自动化运维与脚本规范","url":"/2.2-自动化运维与脚本规范.html","content":"# 2.2 自动化运维与脚本规范 ## 一、适用范围与目标 - 适用于所有自动化脚本、运维工具、自动化平台任务等开发、管理和执行场景。 - 目标：提升运维效率，降低人为失误，保障自动化安全与可维护性。 ## 二、管理目标 1. 脚本开发标准化、可读性强、易于维护 2. 自动化流程可追溯、可复用、可审计 3. 安全合规，敏感信息不泄露 ## 三、详细规范 - 脚本开发：统一语言（如Python、Shell、Go），规范命名，注释清晰，异常处理完善 - 版本管理：所有脚本需纳入Git等版本控制，变更需评审 - 参数化与幂等性：脚本支持参数输入，执行多次结果一致 - 日志与输出：结构化日志，关键操作与异常需详细记录 - 敏感信息管理：禁止硬编码密码、密钥，使用环境变量或密钥管理工具 - 自动化平台接入：脚本需有文档说明，便于平台集成与复用 ## 四、操作流程 1. 脚本开发 → 代码评审 → 测试 → 上线 → 文档归档 2. 脚本变更 → 评审 → 回归测试 → 上线 3. 自动化任务执行 → 日志归档 → 异常处理与通知 ## 五、实际案例 - 批量主机初始化脚本，参数化支持不同环境，执行日志自动归档 - 自动化发布脚本，支持回滚，敏感信息通过Vault注入 - 定时巡检脚本，异常自动告警并生成报告 ## 六、脚本开发模板 ```python #!/usr/bin/env python3 \"\"\" 脚本说明：批量主机健康检查 作者：张三 日期：2024-07-10 \"\"\" import argparse import logging def main(): parser = argparse.ArgumentParser(description='批量主机健康检查') parser.add_argument('--hosts', required=True, help='主机列表') args = parser.parse_args() # 业务逻辑 logging.info('开始健康检查...') if __name__ == '__main__': logging.basicConfig(level=logging.INFO) main() ``` ## 七、注意事项 - 禁止硬编码敏感信息，禁止无注释、无文档上线 - 自动化脚本需定期回归测试，防止“脚本漂移” - 生产环境脚本变更需审批，执行需留痕 ## 八、参考资料 - 《DevOps 自动化最佳实践》 - 《阿里云自动化运维脚本规范》 - 团队内部自动化开发手册"},{"title":"2.3-自动化测试与演练规范","url":"/2.3-自动化测试与演练规范.html","content":"# 2.3 自动化测试与演练规范 ## 一、适用范围与目标 - 适用于所有自动化脚本、运维流程、CI/CD流水线、应急预案等的测试与演练。 - 目标：保障自动化流程的可靠性、可回归性和应急响应能力。 ## 二、管理目标 1. 测试全覆盖，流程可回归、可验证 2. 定期演练，提升团队应急响应能力 3. 测试与演练过程可追溯、可复盘 ## 三、详细规范 - 测试覆盖：单元、集成、回归、e2e测试全覆盖，关键流程需Mock隔离 - 用例管理：标准化用例编写，覆盖正常、异常、边界场景 - 自动化演练：定期演练自动化流程、应急预案，验证可靠性 - 故障注入：支持混沌工程、故障注入、回滚与恢复演练 - 审批与报告：测试与演练需审批，结果归档，问题复盘与整改 ## 四、操作流程 1. 新脚本/流程开发 → 单元/集成测试 → 回归测试 → 上线 2. 定期自动化演练 → 故障注入 → 恢复验证 → 复盘总结 3. 测试/演练报告归档 → 问题整改跟踪 ## 五、实际案例 - 新上线自动化发布脚本，覆盖多环境回归测试，异常场景Mock - 每季度组织K8s节点故障演练，验证自动恢复与告警流程 - 生产环境混沌工程演练，注入网络延迟，验证业务韧性 ## 六、测试用例模板 ```text # 测试用例 - 用例编号： - 测试对象： - 场景描述： - 输入数据： - 预期结果： - 实际结果： - 结论：通过/不通过 - 备注： ``` ## 七、注意事项 - 关键流程必须有自动化测试，严禁“裸上线” - 演练需提前通知相关团队，避免误操作 - 测试与演练报告需归档，便于追溯与改进 ## 八、参考资料 - 《DevOps 自动化测试最佳实践》 - 《混沌工程与韧性测试指南》 - 团队内部测试与演练手册"},{"title":"3.1-监控与告警规范-流程图","url":"/3.1-监控与告警规范-流程图.html","content":"# 监控与告警规范-流程图 ```mermaid graph TD; 新增监控项-->配置采集与告警; 配置采集与告警-->测试验证; 测试验证-->上线; 上线-->告警触发; 告警触发-->通知责任人; 通知责任人-->响应与处理; 响应与处理-->记录与关闭; 记录与关闭-->定期复盘; 定期复盘-->优化监控与告警规则; ```"},{"title":"3.1-监控与告警规范","url":"/3.1-监控与告警规范.html","content":"# 3.1 监控与告警规范 ## 一、适用范围与目标 - 适用于所有主机、服务、网络、存储、应用等的监控与告警管理。 - 目标：实现全方位监控、及时告警、快速响应，保障系统稳定运行。 ## 二、管理目标 1. 监控覆盖全面，指标合理，告警及时准确 2. 告警分级响应，闭环处理，定期复盘 3. 监控与告警配置标准化、自动化、可追溯 ## 三、详细规范 - 监控项：主机（CPU、内存、磁盘、网络）、服务可用性、应用性能、业务指标等 - 指标采集：统一采集方式（如Prometheus、Zabbix），数据实时上报 - 告警规则：多维度阈值，支持静态/动态阈值，避免误报/漏报 - 告警分级：P1（致命）、P2（严重）、P3（一般），不同级别响应时限与流程 - 通知方式：邮件、IM、短信等多渠道，7x24小时值班响应 - 自愈机制：关键告警支持自动化自愈脚本 - 告警闭环：处理结果需记录，定期复盘与优化 ## 四、操作流程 1. 新增监控项 → 配置采集与告警 → 测试验证 → 上线 2. 告警触发 → 通知责任人 → 响应与处理 → 记录与关闭 3. 定期复盘 → 优化监控与告警规则 ## 五、实际案例 - 生产数据库CPU使用率>90%，触发P2告警，10分钟内响应，30分钟内处理恢复 - Web服务不可用，自动触发重启脚本，业务恢复后告警关闭 - 定期复盘发现某告警频繁误报，优化阈值与采集方式 ## 六、告警处理记录模板 ```markdown # 告警处理记录 - 告警编号： - 发生时间： - 影响范围： - 告警级别： - 处理人： - 处理过程： - 恢复时间： - 复盘与改进： ``` ## 七、注意事项 - 监控项需定期评审，避免遗漏与冗余 - 告警需闭环处理，严禁“无主”告警 - 监控与告警配置变更需审批与记录 ## 八、参考资料 - 《Prometheus 监控与告警实践》 - 《阿里云监控与告警最佳实践》 - 团队内部监控运维手册"},{"title":"3.2-日志与可观测性规范","url":"/3.2-日志与可观测性规范.html","content":"# 3.2 日志与可观测性规范 ## 一、适用范围与目标 - 适用于所有系统、服务、应用、网络等的日志采集、存储、分析与可观测性建设。 - 目标：实现日志全量采集、结构化、可追溯，提升系统可观测性和故障定位效率。 ## 二、管理目标 1. 日志采集全覆盖，格式统一，内容完整 2. 日志归档、存储、查询高效，合规可追溯 3. 可观测性体系完善，支持分布式追踪与指标分析 ## 三、详细规范 - 日志格式：统一结构（如JSON/Logfmt），包含traceId、level、timestamp、业务标识等 - 日志采集：自动采集主机、服务、应用、网络等日志，支持多源接入 - 日志归档与存储：分级存储，定期归档、压缩、清理，满足合规要求 - 日志查询与分析：支持全文检索、标签、聚合分析，便于故障定位 - 分布式追踪：全链路traceId贯穿，支持OpenTelemetry、Jaeger等 - 指标与仪表盘：关键日志转化为指标，统一仪表盘可视化 ## 四、操作流程 1. 新增服务/应用 → 配置日志采集与格式 → 验证采集 → 上线 2. 日志归档与清理 → 定期检查存储与合规性 3. 故障定位 → 日志检索与分析 → 问题复盘 ## 五、实际案例 - 生产环境服务异常，通过traceId快速定位到下游依赖超时 - 日志采集平台定期归档，满足等保合规要求 - 业务关键操作日志转化为Prometheus指标，仪表盘实时展示 ## 六、日志字段模板 ```json { \"timestamp\": \"2024-07-10T12:00:00Z\", \"level\": \"INFO\", \"traceId\": \"abc123\", \"service\": \"order-api\", \"message\": \"订单创建成功\", \"userId\": \"u001\", \"extra\": {} } ``` ## 七、注意事项 - 禁止日志中输出敏感信息（如密码、密钥） - 日志采集与存储需高可用，防止丢失 - 日志格式变更需评审，兼容历史数据 ## 八、参考资料 - 《ELK 日志平台最佳实践》 - 《可观测性三板斧：日志、指标、追踪》 - 团队内部日志管理制度"},{"title":"3.3-运维质量与效能度量规范","url":"/3.3-运维质量与效能度量规范.html","content":"# 3.3 运维质量与效能度量规范 ## 一、适用范围与目标 - 适用于所有运维活动、流程、自动化、变更、故障等的质量与效能度量。 - 目标：通过量化指标持续提升运维质量、效率和团队协作水平。 ## 二、管理目标 1. 关键KPI指标体系完善，数据采集自动化 2. 定期分析与复盘，驱动持续改进 3. 质量报告透明，绩效考核有据可依 ## 三、详细规范 - 关键指标： - MTTR（平均修复时长） - MTBF（平均故障间隔） - 变更成功率、自动化覆盖率 - 告警响应时效、误报率、闭环率 - 工单处理时效、知识库覆盖率 - 数据采集：自动采集监控、工单、变更、告警等数据，保证准确性与时效性 - 分析与报告：定期生成质量与效能报告，问题归因与改进建议 - 目标与考核：年度/季度目标设定，绩效考核与激励机制 ## 四、操作流程 1. 指标定义 → 数据采集配置 → 定期分析 → 生成报告 → 复盘与改进 2. 质量问题发现 → 归因分析 → 制定改进措施 → 跟踪落实 ## 五、实际案例 - 每月生成运维质量报告，MTTR下降20%，自动化覆盖率提升至80% - 变更成功率低于目标，复盘发现审批流程薄弱，优化后提升10% - 告警误报率高，调整监控规则后显著下降 ## 六、质量报告模板 ```markdown # 运维质量与效能报告 - 报告周期： - MTTR： - MTBF： - 变更成功率： - 自动化覆盖率： - 告警响应时效： - 主要问题与改进建议： - 负责人： ``` ## 七、注意事项 - 指标需与业务目标对齐，避免“唯指标论” - 数据采集自动化，人工补录需注明 - 质量报告需团队共享，推动持续改进 ## 八、参考资料 - 《SRE 运维效能度量实践》 - 《DevOps KPI 指标体系》 - 团队内部质量管理制度"},{"title":"4.1-安全合规与审计规范","url":"/4.1-安全合规与审计规范.html","content":"# 4.1 安全合规与审计规范 ## 一、适用范围与目标 - 适用于所有IT系统、云平台、网络、主机、数据库等的安全、合规与审计管理。 - 目标：保障系统安全、满足合规要求、实现操作可追溯与风险可控。 ## 二、管理目标 1. 安全策略标准化，合规要求落地 2. 审计全覆盖，关键操作可追溯 3. 定期检查与整改，持续提升安全水平 ## 三、详细规范 - 网络与防火墙：端口、白名单、访问控制策略，定期安全组审查 - 身份与权限：RBAC、最小权限原则，敏感操作多因子认证 - 日志与审计：关键操作、登录、变更全量日志，日志集中存储与定期备份 - 合规检查：定期安全扫描与合规自查，敏感数据加密与脱敏 - 安全事件响应：分级响应流程，取证与报告要求 - 数据留存：日志、审计数据保留≥180天，满足等保、GDPR等法规 ## 四、操作流程 1. 新系统上线 → 安全基线检查 → 权限配置 → 审计策略部署 2. 日常操作 → 审计日志采集 → 定期安全检查 → 问题整改 3. 安全事件发生 → 分级响应 → 取证与报告 → 复盘与改进 ## 五、实际案例 - 定期安全组审查，发现异常端口开放，及时关闭并记录整改 - 生产数据库敏感操作需二次认证，操作全程审计 - 安全事件发生后，按流程取证、报告、复盘，完善应急预案 ## 六、安全审计记录模板 ```text # 安全审计记录 - 审计编号： - 审计对象： - 审计时间： - 审计内容： - 发现问题： - 整改措施： - 责任人： - 复查结果： ``` ## 七、注意事项 - 禁止弱口令、默认账号、未授权端口暴露 - 审计日志需防篡改、定期备份，敏感数据加密 - 合规要求变更需及时同步到所有系统 ## 八、参考资料 - 《等保2.0安全合规指南》 - 《GDPR 数据保护合规手册》 - 团队内部安全管理制度"},{"title":"4.2-数据安全与隐私保护规范","url":"/4.2-数据安全与隐私保护规范.html","content":"# 4.2 数据安全与隐私保护规范 ## 一、适用范围与目标 - 适用于所有涉及业务数据、用户数据、敏感信息的系统、数据库、存储、传输等环节。 - 目标：保障数据安全、隐私合规，防止数据泄露与滥用。 ## 二、管理目标 1. 数据分级分类，敏感数据重点保护 2. 数据加密、脱敏、访问可控 3. 合规要求落地，操作可追溯 ## 三、详细规范 - 数据分级分类：业务数据、敏感数据、个人信息分级管理，分类存储与访问 - 数据加密：敏感数据存储与传输全程加密，密钥集中管理，定期更换 - 数据脱敏：测试、开发、外部共享等场景需脱敏处理，防止泄露 - 访问控制：最小权限原则，敏感数据访问需审批与审计 - 操作审计：所有数据操作全量审计，日志保留≥180天 - 合规要求：满足GDPR、等保等法规，定期合规检查与整改 ## 四、操作流程 1. 新增数据表/字段 → 分级分类 → 加密/脱敏配置 → 权限分配 2. 敏感数据访问申请 → 审批 → 操作 → 审计记录 3. 定期合规检查 → 问题整改 → 复查 ## 五、实际案例 - 生产数据库用户手机号字段加密存储，开发环境自动脱敏 - 某业务数据外发前，先脱敏处理并审批归档 - 定期合规检查发现部分表未加密，整改后通过复查 ## 六、数据访问申请模板 ```markdown # 数据访问申请单 - 申请人： - 申请数据范围： - 用途说明： - 访问时限： - 审批人： - 操作记录： - 备注： ``` ## 七、注意事项 - 禁止明文存储敏感数据，禁止无审批访问敏感信息 - 密钥、证书需专人管理，定期更换 - 合规要求变更需同步到所有相关系统 ## 八、参考资料 - 《GDPR 数据保护合规手册》 - 《等保2.0数据安全要求》 - 团队内部数据安全管理制度"},{"title":"4.3-运维安全应急演练规范","url":"/4.3-运维安全应急演练规范.html","content":"# 4.3 运维安全应急演练规范 ## 一、适用范围与目标 - 适用于所有生产、测试、云平台等环境的安全应急演练，包括故障、攻击、数据泄露等场景。 - 目标：提升团队应急响应能力，检验预案有效性，持续优化安全体系。 ## 二、管理目标 1. 演练计划制度化，覆盖典型安全场景 2. 演练过程可追溯，问题可复盘、可整改 3. 持续优化应急预案与响应流程 ## 三、详细规范 - 演练计划：年度/季度制定演练计划，覆盖勒索、DDoS、数据泄露等场景 - 演练流程：预案编写、角色分工、演练通知、实战推演、总结复盘 - 记录与改进：全程记录，问题归档，制定整改措施，复盘报告归档 - 评估与考核：演练效果评估，考核机制，持续优化预案 - 合规要求：满足等保、ISO27001等合规演练要求 ## 四、操作流程 1. 制定演练计划 → 场景设计 → 预案编写 → 审批 2. 演练通知 → 角色分工 → 实战推演 → 记录过程 3. 总结复盘 → 问题整改 → 归档报告 ## 五、实际案例 - 每季度组织DDoS攻击应急演练，检验流量清洗与切换流程 - 数据泄露场景演练，发现预案缺失，补充完善后复盘归档 - 勒索病毒演练，验证备份恢复与隔离流程 ## 六、演练报告模板 ```text # 应急演练报告 - 演练编号： - 场景描述： - 参与人员： - 演练时间： - 过程记录： - 发现问题： - 整改措施： - 复盘总结： ``` ## 七、注意事项 - 演练需提前通知相关团队，避免误操作影响生产 - 关键环节需留痕，演练结果需归档 - 合规演练需满足监管要求，报告可追溯 ## 八、参考资料 - 《等保2.0应急演练指南》 - 《ISO27001安全演练要求》 - 团队内部应急预案与演练手册"},{"title":"5.1-容器与云原生运维规范","url":"/5.1-容器与云原生运维规范.html","content":"# 5.1 容器与云原生运维规范 ## 一、适用范围与目标 - 适用于Kubernetes、Docker等容器平台及云原生相关的资源、服务、CI/CD等运维管理。 - 目标：提升容器与云原生环境的标准化、自动化、安全性和可观测性。 ## 二、管理目标 1. 资源命名、标签、注释标准化，便于自动化与治理 2. 镜像、仓库、CI/CD流水线安全合规 3. 监控、日志、告警、弹性伸缩体系完善 ## 三、详细规范 - 资源管理：K8s资源命名、标签、注释规范，命名空间、资源配额、网络策略管理 - 镜像与仓库：镜像构建、扫描、签名、拉取策略，私有仓库接入与权限管理 - CI/CD流水线：自动化构建、测试、部署，多环境隔离与回滚机制 - 监控与日志：容器级监控（如Prometheus、cAdvisor）、日志采集与聚合（如ELK、Loki） - 安全与合规：镜像最小化、漏洞扫描、RBAC权限、Pod安全策略（PSP/OPA） - 弹性与高可用：HPA/VPA策略、Pod反亲和性、多可用区部署与容灾 ## 四、操作流程 1. 新增K8s资源 → 命名/标签/注释 → 配置资源配额与网络策略 → 审核上线 2. 镜像构建 → 安全扫描 → 推送仓库 → CI/CD自动部署 3. 监控/日志/告警配置 → 验证 → 持续优化 ## 五、实际案例 - 新增业务命名空间，统一标签，配置资源配额与网络隔离 - 镜像构建后自动扫描漏洞，合规后推送私有仓库 - 生产环境Pod自动弹性伸缩，监控指标实时可视化 ## 六、K8s资源命名模板 ```text --- 例：order-api-prod-01 ``` ## 七、注意事项 - 禁止使用latest标签，禁止未扫描镜像上线 - 资源命名、标签、注释需统一，便于治理 - 生产环境变更需审批，关键配置需备份 ## 八、参考资料 - 《Kubernetes 最佳实践》 - 《云原生运维指南》 - 团队内部K8s运维手册"},{"title":"5.2-CI_CD流水线与自动化规范","url":"/5.2-CI_CD流水线与自动化规范.html","content":"# 5.2 CI/CD流水线与自动化规范 ## 一、适用范围与目标 - 适用于所有代码仓库、自动化构建、测试、部署、回滚等CI/CD相关流程。 - 目标：实现持续集成、持续交付的标准化、自动化、安全与高效。 ## 二、管理目标 1. 流水线全流程自动化，阶段分明、可追溯 2. 环境隔离、产物与变量管理规范 3. 自动化测试、回滚、审批机制完善 ## 三、详细规范 - 流水线设计：代码提交、自动测试、构建、部署全流程，支持审批与回滚 - 环境隔离：dev/staging/prod环境配置隔离，产物、变量、密钥分环境管理 - 自动化测试：单元、集成、e2e测试全覆盖，测试失败自动阻断发布 - 产物与版本管理：产物唯一标识（如commit SHA/tag），归档、回溯、清理策略 - 安全与合规：敏感信息加密、权限最小化，流水线操作与变更全程审计 - 回滚机制：支持一键回滚，回滚流程需测试验证 ## 四、操作流程 1. 代码提交 → 自动化测试 → 构建产物 → 审批/自动部署 → 验证 → 上线 2. 流水线变更 → 评审 → 回归测试 → 上线 3. 发布异常 → 自动/手动回滚 → 记录与复盘 ## 五、实际案例 - 新增前端项目流水线，支持多环境自动部署与一键回滚 - 生产环境发布失败，自动触发回滚，产物与日志归档 - 敏感变量通过密钥管理平台注入，流水线全程审计 ## 六、流水线设计模板 ```yaml stages: - test - build - deploy variables: ENV: prod steps: - name: 单元测试 script: npm test - name: 构建 script: npm run build - name: 部署 script: ./deploy.sh ``` ## 七、注意事项 - 禁止在流水线中明文存储敏感信息 - 流水线变更需评审，关键流程需审批 - 发布与回滚操作需留痕，便于追溯 ## 八、参考资料 - 《CI/CD流水线最佳实践》 - 《DevOps自动化交付指南》 - 团队内部流水线管理制度"},{"title":"5.3-基础设施即代码（IaC）规范","url":"/5.3-基础设施即代码（IaC）规范.html","content":"# 5.3 基础设施即代码（IaC）规范 ## 一、适用范围与目标 - 适用于Terraform、Pulumi、Ansible、Helm等IaC工具的基础设施自动化管理。 - 目标：实现基础设施自动化、标准化、可追溯、可回滚。 ## 二、管理目标 1. 目录结构、命名、变量、模块标准化 2. 代码变更可审计、可回滚、可复用 3. 敏感信息安全管理，合规可追溯 ## 三、详细规范 - 目录结构：统一modules、environments、scripts等目录，便于复用与治理 - 命名规范：资源、变量、模块命名统一，便于自动化与排查 - 变量与参数：集中管理，支持多环境覆盖，敏感参数加密存储（如Vault、SOPS） - 代码管理：纳入Git版本控制，分支策略（如main/dev/feature），变更需评审与自动化测试 - 部署与回滚：自动化部署流程，支持dry-run、回滚机制，变更记录与审计 - 工具与最佳实践：推荐Terraform、Pulumi、Ansible、Helm，代码复用、模块化、文档化 ## 四、操作流程 1. IaC代码开发 → 代码评审 → 测试 → 合并主干 → 自动化部署 2. 变更申请 → 审批 → 部署 → 验证 → 回滚（如需） 3. 定期代码审计与模块优化 ## 五、实际案例 - 新增VPC、子网、ECS等资源，全部通过Terraform模块化管理 - 生产环境IaC变更，先dry-run验证，审批后上线，异常时一键回滚 - 敏感变量如数据库密码通过Vault加密注入，未出现在代码库 ## 六、目录结构模板 ```text infra/ ├── modules/ ├── environments/ ├── scripts/ ├── main.tf ├── variables.tf └── README.md ``` ## 七、注意事项 - 禁止硬编码敏感信息，禁止无评审直接上线 - 变更需全链路留痕，回滚流程需验证 - IaC代码需定期重构与模块化优化 ## 八、参考资料 - 《Terraform最佳实践》 - 《基础设施即代码白皮书》 - 团队内部IaC开发手册"},{"title":"5.4-多云与混合云管理规范","url":"/5.4-多云与混合云管理规范.html","content":"# 5.4 多云与混合云管理规范 ## 一、适用范围与目标 - 适用于阿里云、AWS、GCP、私有云等多云及混合云环境的资源、网络、账号、运维管理。 - 目标：实现多云资源统一纳管、网络互通、安全合规、成本优化。 ## 二、管理目标 1. 资源、账号、标签统一纳管，生命周期自动化 2. 跨云网络安全互通，权限分级、合规可追溯 3. 备份、容灾、成本、合规管理体系完善 ## 三、详细规范 - 资源统一管理：多云平台账号、资源、标签统一纳管，生命周期自动化 - 网络与安全：跨云网络互通（VPN/专线）、安全组、ACL、零信任架构 - 备份与容灾：跨云备份、异地容灾、恢复演练，关键数据多活与同步 - 成本与合规：云资源成本监控与优化，合规检查与审计 - 自动化与工具：IaC工具（Terraform/Pulumi）统一管理，多云API/SDK集成 ## 四、操作流程 1. 新增云账号/资源 → 纳入统一管理平台 → 标签/权限配置 2. 跨云网络配置 → 安全组/ACL策略 → 验证互通 3. 备份/容灾策略制定 → 定期演练 → 结果归档 4. 成本与合规定期分析 → 优化与整改 ## 五、实际案例 - 新增AWS账号，纳入统一CMDB与权限管理，标签与生命周期自动同步 - 跨云VPN配置，实现阿里云与私有云网络互通，安全组策略统一 - 关键业务数据跨云备份，定期恢复演练，确保容灾能力 ## 六、资源纳管模板 ```markdown # 云资源纳管登记表 - 云平台： - 账号ID： - 资源类型： - 标签： - 权限分配： - 生命周期状态： - 负责人： - 备注： ``` ## 七、注意事项 - 禁止孤立云账号、无标签资源，防止“影子IT” - 跨云网络与安全策略需定期复查 - 成本与合规分析需团队共享，推动持续优化 ## 八、参考资料 - 《多云管理平台最佳实践》 - 《云原生混合云运维指南》 - 团队内部多云管理制度"},{"title":"5.5-AIOps与智能运维规范","url":"/5.5-AIOps与智能运维规范.html","content":"# 5.5 AIOps与智能运维规范 ## 一、适用范围与目标 - 适用于所有引入AI/ML能力的监控、告警、日志、自动化修复、容量预测等智能运维场景。 - 目标：提升运维自动化、智能化水平，降低故障率与人力成本。 ## 二、管理目标 1. 智能告警、异常检测、根因分析自动化 2. 自动化修复与自愈，提升系统韧性 3. 数据采集、分析、决策智能化，持续优化 ## 三、详细规范 - 智能告警与异常检测：采用AI/ML模型进行异常检测、降噪，支持多维聚合、根因分析 - 自动化修复与自愈：结合自动化平台实现故障自愈，支持自动回滚、重启、扩容等操作 - 数据采集与分析：全量采集监控、日志、指标数据，AI/ML模型训练与持续优化 - 决策与辅助：AI辅助运维决策、容量预测、资源调度，智能报表与趋势分析 - 安全与合规：AI模型与数据合规，敏感数据脱敏，模型可解释性 ## 四、操作流程 1. 监控/日志/指标数据采集 → AI/ML模型训练 → 部署上线 2. 智能告警触发 → 根因分析 → 自动化修复/自愈 → 记录与复盘 3. 定期模型评估与优化 → 结果归档 ## 五、实际案例 - 生产环境引入AI异常检测，告警误报率下降30%，根因分析效率提升 - 自动化自愈脚本结合AI决策，故障恢复时间缩短50% - 容量预测模型辅助资源扩容，避免业务高峰资源瓶颈 ## 六、AIOps流程模板 ```mermaid graph TD; 数据采集-->AI模型训练; AI模型训练-->智能告警; 智能告警-->根因分析; 根因分析-->自动化修复; 自动化修复-->复盘优化; ``` ## 七、注意事项 - AI模型需定期评估，防止“模型漂移” - 敏感数据需脱敏，模型训练与推理过程合规 - 自动化修复需有回滚与人工干预机制 ## 八、参考资料 - 《AIOps智能运维白皮书》 - 《智能告警与根因分析实践》 - 团队内部AIOps实施手册"},{"title":"6.1-备份与恢复规范","url":"/6.1-备份与恢复规范.html","content":"# 6.1 备份与恢复规范 ## 一、适用范围与目标 - 适用于所有生产、测试、开发环境的数据、配置、镜像等的备份与恢复管理。 - 目标：保障关键数据安全，支持快速恢复，降低业务中断风险。 ## 二、管理目标 1. 备份策略全覆盖，频率、保留周期、存储位置规范 2. 恢复流程标准化，定期演练，确保可用性 3. 备份安全、合规、可追溯 ## 三、详细规范 - 备份策略：数据、配置、镜像等定期备份，区分全量/增量，明确频率与保留周期 - 存储管理：备份数据多地存储，异地容灾，定期校验完整性 - 恢复流程：制定标准恢复流程，定期演练，操作需审批与记录 - 备份安全：数据加密、访问控制，备份介质定期检查 - 监控与告警：备份任务监控与告警，失败重试与通知机制 - 合规要求：满足等保、GDPR等法规，备份日志与记录保留 ## 四、操作流程 1. 制定备份策略 → 配置备份任务 → 定期校验 → 记录归档 2. 恢复申请 → 审批 → 恢复操作 → 验证 → 记录归档 3. 定期恢复演练 → 发现问题整改 ## 五、实际案例 - 生产数据库每日全量+每小时增量备份，异地存储，定期恢复演练 - 某业务数据误删，通过备份快速恢复，业务无中断 - 备份任务失败自动告警，运维及时修复，数据无丢失 ## 六、备份策略模板 ```markdown # 备份策略 - 备份对象： - 备份类型：全量/增量 - 备份频率： - 保留周期： - 存储位置： - 加密方式： - 负责人： - 校验与演练计划： ``` ## 七、注意事项 - 禁止无备份上线，禁止备份与生产同存储 - 恢复流程需定期演练，确保可用性 - 备份数据需加密，访问权限最小化 ## 八、参考资料 - 《企业数据备份与恢复最佳实践》 - 《等保2.0数据备份要求》 - 团队内部备份管理制度"},{"title":"6.2-供应商与外包管理规范","url":"/6.2-供应商与外包管理规范.html","content":"# 6.2 供应商与外包管理规范 ## 一、适用范围与目标 - 适用于所有第三方供应商、外包团队、合作伙伴的接入、管理与审计。 - 目标：规范第三方接入流程，保障系统安全、数据合规与服务质量。 ## 二、管理目标 1. 供应商资质审核、接入审批、权限分级 2. 外包人员账号、操作、交接全流程留痕 3. 合同、SLA、服务考核与退出机制完善 ## 三、详细规范 - 第三方接入管理：供应商资质审核、接入审批流程，账号、权限、访问控制 - 外包人员管理：账号申请、权限分配、定期回收，操作审计与行为监控 - 合同与SLA：服务等级协议签订与考核，合同管理、到期提醒、续签流程 - 交接与退出：外包人员离场交接、账号回收，数据与文档归档 - 安全与合规：外包操作全程审计，敏感数据访问需审批，合规要求落地 ## 四、操作流程 1. 供应商接入申请 → 资质审核 → 审批 → 账号/权限配置 2. 外包人员入场 → 账号分配 → 操作审计 → 定期回收 3. 合同签订 → 服务考核 → 到期提醒/续签/退出 4. 离场交接 → 账号回收 → 数据/文档归档 ## 五、实际案例 - 新供应商接入，资质审核通过后分配只读账号，操作全程审计 - 外包人员离场，账号及时回收，数据与文档归档，交接流程留痕 - 合同到期前自动提醒，服务考核后决定续签或退出 ## 六、供应商接入登记模板 ```markdown # 供应商接入登记表 - 供应商名称： - 资质审核结果： - 接入系统： - 账号/权限： - 合同编号： - 服务期限： - 负责人： - 备注： ``` ## 七、注意事项 - 禁止共用账号，禁止无审批操作，敏感数据访问需授权 - 合同、SLA、审计记录需归档，便于追溯 - 外包人员离场交接需全流程留痕 ## 八、参考资料 - 《企业外包与供应商管理规范》 - 《IT服务外包安全管理指南》 - 团队内部供应商管理制度"},{"title":"6.3-绿色运维与可持续发展规范","url":"/6.3-绿色运维与可持续发展规范.html","content":"# 6.3 绿色运维与可持续发展规范 ## 一、适用范围与目标 - 适用于数据中心、服务器、网络、存储、云资源等全生命周期的绿色运维与可持续发展管理。 - 目标：降低能耗、提升资源利用率、推动绿色数据中心和可持续发展。 ## 二、管理目标 1. 节能降耗，能效监控与优化 2. 资源回收与再利用，减少浪费 3. 绿色数据中心建设，碳排放监控与报告 ## 三、详细规范 - 节能降耗：服务器、网络、存储设备能耗监控，低功耗硬件优先采购，能效指标（如PUE）优化 - 资源回收与再利用：闲置资源回收、再分配、下线设备环保处理，虚拟化、容器化提升资源利用率 - 绿色数据中心：绿色能源（如风能、光伏）使用，数据中心能效优化，冷却系统节能 - 碳排放监控与报告：监控碳排放，定期报告与改进，推动碳中和目标实现 - 合规与认证：符合ISO14001、绿色数据中心等认证要求 ## 四、操作流程 1. 能耗监控部署 → 数据采集 → 定期分析 → 优化措施实施 2. 闲置资源盘点 → 回收/再分配/环保处理 → 记录归档 3. 碳排放数据采集 → 报告编制 → 改进计划 ## 五、实际案例 - 数据中心PUE优化，采用冷通道封闭、风能供电，能耗下降15% - 闲置服务器回收再利用，减少新购，提升资源利用率 - 定期碳排放报告，推动绿色运维文化建设 ## 六、能耗监控模板 ```text # 能耗监控与优化记录 - 监控对象： - 能耗数据： - 优化措施： - 实施时间： - 效果评估： - 负责人： - 备注： ``` ## 七、注意事项 - 禁止长期闲置资源，定期盘点与回收 - 能耗与碳排放数据需真实、可追溯 - 绿色运维目标需纳入团队绩效考核 ## 八、参考资料 - 《绿色数据中心建设与运维指南》 - 《ISO14001环境管理体系》 - 团队内部绿色运维管理制度"},{"title":"运维规范目录索引","url":"/README.md","content":"# 运维规范目录索引 本目录收录了企业级运维架构师必备的全套运维规范，涵盖基础、变更、监控、安全、云原生、智能运维、绿色可持续等全领域内容。每份文档均包含适用范围、详细规范、操作流程、案例、模板、注意事项和参考资料。 --- ## 目录结构 ### 1. 基础通用规范 - [1.1-基础设施命名规范](./1.1-基础设施命名规范.md)：资源命名统一、可追溯，便于自动化管理 - [1.2-主机与资产管理规范](./1.2-主机与资产管理规范.md)：资产全生命周期管理，提升可见性与合规性 - [1.3-账号与权限管理规范](./1.3-账号与权限管理规范.md)：账号实名、权限最小化、全程审计 - [1.4-文档与知识管理规范](./1.4-文档与知识管理规范.md)：知识库、SOP、案例归档与复盘 ### 2. 变更与发布管理 - [2.1-变更与发布管理规范](./2.1-变更与发布管理规范.md)：变更全流程可控、可追溯、可回退 - [2.2-自动化运维与脚本规范](./2.2-自动化运维与脚本规范.md)：脚本开发、管理、自动化平台接入 - [2.3-自动化测试与演练规范](./2.3-自动化测试与演练规范.md)：自动化测试、演练、混沌工程 ### 3. 监控与可观测性 - [3.1-监控与告警规范](./3.1-监控与告警规范.md)：监控全覆盖、告警分级、闭环处理 - [3.2-日志与可观测性规范](./3.2-日志与可观测性规范.md)：日志采集、结构化、分布式追踪 - [3.3-运维质量与效能度量规范](./3.3-运维质量与效能度量规范.md)：KPI指标、报告、持续改进 ### 4. 安全与合规 - [4.1-安全合规与审计规范](./4.1-安全合规与审计规范.md)：安全策略、审计、合规检查 - [4.2-数据安全与隐私保护规范](./4.2-数据安全与隐私保护规范.md)：数据分级、加密、脱敏、合规 - [4.3-运维安全应急演练规范](./4.3-运维安全应急演练规范.md)：应急演练、复盘、持续优化 ### 5. 云原生与自动化 - [5.1-容器与云原生运维规范](./5.1-容器与云原生运维规范.md)：K8s、镜像、CI/CD、弹性伸缩 - [5.2-CI_CD流水线与自动化规范](./5.2-CI_CD流水线与自动化规范.md)：流水线设计、自动化测试、回滚 - [5.3-基础设施即代码（IaC）规范](./5.3-基础设施即代码（IaC）规范.md)：IaC目录、命名、回滚、敏感信息管理 - [5.4-多云与混合云管理规范](./5.4-多云与混合云管理规范.md)：多云资源统一纳管、网络互通、成本合规 - [5.5-AIOps与智能运维规范](./5.5-AIOps与智能运维规范.md)：AI告警、异常检测、自愈、容量预测 ### 6. 运营与供应链 - [6.1-备份与恢复规范](./6.1-备份与恢复规范.md)：备份策略、恢复流程、演练 - [6.2-供应商与外包管理规范](./6.2-供应商与外包管理规范.md)：第三方接入、合同、SLA、交接 - [6.3-绿色运维与可持续发展规范](./6.3-绿色运维与可持续发展规范.md)：节能降耗、资源回收、碳排放监控 --- 如需专项细化、案例补充、流程图、表格等，请联系运维架构师团队。"},{"title":"目录清单","url":"/目录清单.html","content":"# 运维规范文档汇总清单 | 编号 | 文档名称 | 简要说明 | |------|-----------------------------|--------------------------------------------------| | 1.1 | 基础设施命名规范 | 资源命名统一、可追溯，便于自动化管理 | | 1.2 | 主机与资产管理规范 | 资产全生命周期管理，提升可见性与合规性 | | 1.3 | 账号与权限管理规范 | 账号实名、权限最小化、全程审计 | | 1.4 | 文档与知识管理规范 | 知识库、SOP、案例归档与复盘 | | 2.1 | 变更与发布管理规范 | 变更全流程可控、可追溯、可回退 | | 2.2 | 自动化运维与脚本规范 | 脚本开发、管理、自动化平台接入 | | 2.3 | 自动化测试与演练规范 | 自动化测试、演练、混沌工程 | | 3.1 | 监控与告警规范 | 监控全覆盖、告警分级、闭环处理 | | 3.2 | 日志与可观测性规范 | 日志采集、结构化、分布式追踪 | | 3.3 | 运维质量与效能度量规范 | KPI指标、报告、持续改进 | | 4.1 | 安全合规与审计规范 | 安全策略、审计、合规检查 | | 4.2 | 数据安全与隐私保护规范 | 数据分级、加密、脱敏、合规 | | 4.3 | 运维安全应急演练规范 | 应急演练、复盘、持续优化 | | 5.1 | 容器与云原生运维规范 | K8s、镜像、CI/CD、弹性伸缩 | | 5.2 | CI_CD流水线与自动化规范 | 流水线设计、自动化测试、回滚 | | 5.3 | 基础设施即代码（IaC）规范 | IaC目录、命名、回滚、敏感信息管理 | | 5.4 | 多云与混合云管理规范 | 多云资源统一纳管、网络互通、成本合规 | | 5.5 | AIOps与智能运维规范 | AI告警、异常检测、自愈、容量预测 | | 6.1 | 备份与恢复规范 | 备份策略、恢复流程、演练 | | 6.2 | 供应商与外包管理规范 | 第三方接入、合同、SLA、交接 | | 6.3 | 绿色运维与可持续发展规范 | 节能降耗、资源回收、碳排放监控 |"}]}